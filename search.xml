<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>leetcode242.有效的字母异位词</title>
      <link href="/2025/10/14/leetcode242.%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/"/>
      <url>/2025/10/14/leetcode242.%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="1-自己的写法">1 自己的写法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// @lc code=start</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">isAnagram</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">m</span><span class="params">(<span class="number">26</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (s.<span class="built_in">size</span>() != t.<span class="built_in">size</span>()) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> ch : s) &#123;</span><br><span class="line">      m[ch - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> ch : t) &#123;</span><br><span class="line">      m[ch - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">      <span class="keyword">if</span> (m[ch - <span class="string">&#x27;a&#x27;</span>] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-1-官方题解">2.1 官方题解</h2><p><em><strong>方法一：排序</strong></em></p><p>t 是 s 的异位词等价于「两个字符串排序后相等」。因此我们可以对字符串 s 和 t 分别排序，看排序后的字符串是否相等即可判断。此外，如果 s 和 t 的长度不同，t 必然不是 s 的异位词。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isAnagram</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">length</span>() != t.<span class="built_in">length</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">sort</span>(t.<span class="built_in">begin</span>(), t.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">return</span> s == t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/valid-anagram/solutions/493231/you-xiao-de-zi-mu-yi-wei-ci-by-leetcode-solution/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><p><em><strong>方法二：哈希表</strong></em></p><p>从另一个角度考虑，t 是 s 的异位词等价于「两个字符串中字符出现的种类和次数均相等」。由于字符串只包含 26 个小写字母，因此我们可以维护一个长度为 26 的频次数组 table，先遍历记录字符串 s 中字符出现的频次，然后遍历字符串 t，减去 table 中对应的频次，如果出现 table[i]&lt;0，则说明 t 包含一个不在 s 中的额外字符，返回 false 即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isAnagram</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">length</span>() != t.<span class="built_in">length</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">table</span><span class="params">(<span class="number">26</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; ch: s) &#123;</span><br><span class="line">            table[ch - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; ch: t) &#123;</span><br><span class="line">            table[ch - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">            <span class="keyword">if</span> (table[ch - <span class="string">&#x27;a&#x27;</span>] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/valid-anagram/solutions/493231/you-xiao-de-zi-mu-yi-wei-ci-by-leetcode-solution/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><h2 id="2-2-哈希表">2.2 哈希表</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isAnagram</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 若 s, t 长度不同，则不互为重排</span></span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">length</span>() != t.<span class="built_in">length</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// 初始化哈希表 dic</span></span><br><span class="line">        unordered_map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; dic;</span><br><span class="line">        <span class="comment">// 统计字符串 s 各字符数量，遇到 +1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : s) &#123;</span><br><span class="line">            dic[c] += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 统计字符串 t 各字符数量，遇到 -1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : t) &#123;</span><br><span class="line">            dic[c] -= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 遍历 s, t 中各字符的数量差</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> kv : dic) &#123;</span><br><span class="line">            <span class="comment">// 若 s, t 中某字符的数量不一致，则不互为重排</span></span><br><span class="line">            <span class="keyword">if</span> (kv.second != <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 所有字符数量都一致，因此互为重排</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：Krahets</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/valid-anagram/solutions/2362065/242-you-xiao-de-zi-mu-yi-wei-ci-ha-xi-bi-cch7/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode28.找出字符串中第一个匹配项的下标</title>
      <link href="/2025/10/12/leetcode28.%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87/"/>
      <url>/2025/10/12/leetcode28.%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h2 id="1-自己的写法-2">1 自己的写法</h2><p>~_~ 自己没写出来。。。</p><h2 id="2-1-官方题解-2">2.1 官方题解</h2><p><em><strong>方法一：暴力匹配</strong></em></p><p>我们可以让字符串 needle 与字符串 haystack 的所有长度为 m 的子串均匹配一次。</p><p>为了减少不必要的匹配，我们每次匹配失败即立刻停止当前子串的匹配，对下一个子串继续匹配。如果当前子串匹配成功，我们返回当前子串的开始位置即可。如果所有子串都匹配失败，则返回 −1。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最终采用且能看懂的方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">strStr</span><span class="params">(string haystack, string needle)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = haystack.<span class="built_in">size</span>(), m = needle.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + m &lt;= n; i++) &#123;</span><br><span class="line">            <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (haystack[i + j] != needle[j]) &#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string/solutions/732236/shi-xian-strstr-by-leetcode-solution-ds6y/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><p><em><strong>方法二：Knuth-Morris-Pratt 算法</strong></em></p><p>Knuth-Morris-Pratt 算法，简称 KMP 算法，由 Donald Knuth、James H. Morris 和 Vaughan Pratt 三人于 1977 年联合发表。</p><p>Knuth-Morris-Pratt 算法的核心为前缀函数，记作 π(i)，其定义如下：</p><p>对于长度为 m 的字符串 s，其前缀函数 π(i)(0≤i&lt;m) 表示 s 的子串 s[0:i] 的最长的相等的真前缀与真后缀的长度。特别地，如果不存在符合条件的前后缀，那么 π(i)=0。其中真前缀与真后缀的定义为不等于自身的的前缀与后缀。</p><p>我们举个例子说明：字符串 aabaaab 的前缀函数值依次为 0,1,0,1,2,2,3。</p><ul><li><p>π(0)=0，因为 a 没有真前缀和真后缀，根据规定为 0（可以发现对于任意字符串 π(0)=0 必定成立）；</p></li><li><p>π(1)=1，因为 aa 最长的一对相等的真前后缀为 a，长度为 1；</p></li><li><p>π(2)=0，因为 aab 没有对应真前缀和真后缀，根据规定为 0；</p></li><li><p>π(3)=1，因为 aaba 最长的一对相等的真前后缀为 a，长度为 1；</p></li><li><p>π(4)=2，因为 aabaa 最长的一对相等的真前后缀为 aa，长度为 2；</p></li><li><p>π(5)=2，因为 aabaaa 最长的一对相等的真前后缀为 aa，长度为 2；</p></li><li><p>π(6)=3，因为 aabaaab 最长的一对相等的真前后缀为 aab，长度为 3。</p></li></ul><p>有了前缀函数，我们就可以快速地计算出模式串在主串中的每一次出现。</p><p><strong>如何求解前缀函数</strong></p><p>长度为 m 的字符串 s 的所有前缀函数的求解算法的总时间复杂度是严格 O(m) 的，且该求解算法是增量算法，即我们可以一边读入字符串，一边求解当前读入位的前缀函数。</p><p>为了叙述方便，我们接下来将说明几个前缀函数的性质：</p><p>1.π(i)≤π(i−1)+1。</p><blockquote><p>这个性质说明：当前位置的前缀函数值最多比前一个位置的值大1</p></blockquote><ul><li><p>依据 π(i) 定义得：s[0:π(i)−1]=s[i−π(i)+1:i]。</p></li><li><p>将两区间的右端点同时左移，可得：s[0:π(i)−2]=s[i−π(i)+1:i−1]。</p></li><li><p>依据 π(i−1) 定义得：π(i−1)≥π(i)−1，即 π(i)≤π(i−1)+1。</p></li></ul><p>2.如果 s[i]=s[π(i−1)]，那么 π(i)=π(i−1)+1。</p><blockquote><p>这个性质说明：如果当前字符和前一位置的前缀函数值对应的字符相等，那么当前位置的前缀函数值会增加1。</p></blockquote><ul><li><p>依据 π(i−1) 定义得：s[0:π(i−1)−1]=s[i−π(i−1):i−1]。</p></li><li><p>因为 s[π(i−1)]=s[i]，可得 s[0:π(i−1)]=s[i−π(i−1):i]。</p></li><li><p>依据 π(i) 定义得：π(i)≥π(i−1)+1，结合第一个性质可得 π(i)=π(i−1)+1。</p></li></ul><p>这样我们可以依据这两个性质提出求解 π(i) 的方案：找到最大的 j，满足 s[0:j−1]=s[i−j:i−1]，且 s[i]=s[j]（这样就有 s[0:j]=s[i−j:i]，即 π(i)=j+1）。</p><p>注意这里提出了两个要求：</p><p>1.j 要求尽可能大，且满足 s[0:j−1]=s[i−j:i−1]；</p><p>2.j 要求满足 s[i]=s[j]。</p><p>由 π(i−1) 定义可知：</p><p>s[0:π(i−1)−1]=s[i−π(i−1):i−1] <em>(1)</em></p><p>那么 j=π(i−1) 符合第一个要求。如果 s[i]=s[π(i−1)]，我们就可以确定 π(i)。</p><p>否则如果 s[i]!=s[π(i−1)]，那么 π(i)≤π(i−1)，因为 j=π(i)−1，所以 j &lt; π(i−1)，于是可以取 <em>(1)</em> 式两子串的长度为 j 的后缀，它们依然是相等的：s[π(i−1)−j:π(i−1)−1]=s[i−j:i−1]。</p><p>当 s[i]!=s[π(i−1)] 时，我们可以修改我们的方案为：找到最大的 j，满足 s[0:j−1]=s[π(i−1)−j:π(i−1)−1]，且 s[i]=s[j]（这样就有 s[0:j]=s[π(i−1)−j:π(i−1)]，即 π(i)=π(i−1)+1）。</p><p>注意这里提出了两个要求：</p><p>1.j 要求尽可能大，且满足 s[0:j−1]=s[π(i−1)−j:π(i−1)−1]；</p><p>2.j 要求满足 s[i]=s[j]。</p><p>由 π(π(i−1)−1) 定义可知 j=π(π(i−1)−1) 符合第一个要求。如果 s[i]=s[π(π(i−1)−1)]，我们就可以确定 π(i)。</p><p>此时，我们可以发现 j 的取值总是被描述为 π(π(π(…)−1)−1) 的结构（初始为 π(i−1)）。于是我们可以描述我们的算法：设定 π(i)=j+1，j 的初始值为 π(i−1)。我们只需要不断迭代 j（令 j 变为 π(j−1)）直到 s[i]=s[j] 或 j=0 即可，如果最终匹配成功（找到了 j 使得 s[i]=s[j]），那么 π(i)=j+1，否则 π(i)=0。</p><p><strong>复杂度证明</strong></p><p>时间复杂度部分，注意到 π(i)≤π(i−1)+1，即每次当前位的前缀函数至多比前一位增加一，每当我们迭代一次，当前位的前缀函数的最大值都会减少。可以发现前缀函数的总减少次数不会超过总增加次数，而总增加次数不会超过 m 次，因此总减少次数也不会超过 m 次，即总迭代次数不会超过 m 次。</p><p>空间复杂度部分，我们只用到了长度为 m 的数组保存前缀函数，以及使用了常数的空间保存了若干变量。</p><p><strong>如何解决本题</strong></p><p>记字符串 haystack 的长度为 n，字符串 needle 的长度为 m。</p><p>我们记字符串 str=needle+#+haystack，即将字符串 needle 和 haystack 进行拼接，并用不存在于两串中的特殊字符 # 将两串隔开，然后我们对字符串 str 求前缀函数。</p><p>因为特殊字符 # 的存在，字符串 str 中 haystack 部分的前缀函数所对应的真前缀必定落在字符串 needle 部分，真后缀必定落在字符串 haystack 部分。当 haystack 部分的前缀函数值为 m 时，我们就找到了一次字符串 needle 在字符串 haystack 中的出现（因为此时真前缀恰为字符串 needle）。</p><p>实现时，我们可以进行一定的优化，包括：</p><p>1.我们无需显式地创建字符串 str。</p><ul><li>为了节约空间，我们只需要顺次遍历字符串 needle、特殊字符 # 和字符串 haystack 即可。</li></ul><p>2.也无需显式地保存所有前缀函数的结果，而只需要保存字符串 needle 部分的前缀函数即可。</p><ul><li><p>特殊字符 # 的前缀函数必定为 0，且易知 π(i)≤m（真前缀不可能包含特殊字符 #）。</p></li><li><p>这样我们计算 π(i) 时，j=π(π(π(…)−1)−1) 的所有的取值中仅有 π(i−1) 的下标可能大于等于 m。我们只需要保存前一个位置的前缀函数，其它的 j 的取值将全部为字符串 needle 部分的前缀函数。</p></li></ul><p>3.我们也无需特别处理特殊字符 #，只需要注意处理字符串 haystack 的第一个位置对应的前缀函数时，直接设定 j 的初值为 0 即可。</p><p>这样我们可以将代码实现分为两部分：</p><p>1.第一部分是求 needle 部分的前缀函数，我们需要保留这部分的前缀函数值。</p><p>2.第二部分是求 haystack 部分的前缀函数，我们无需保留这部分的前缀函数值，只需要用一个变量记录上一个位置的前缀函数值即可。当某个位置的前缀函数值等于 m 时，说明我们就找到了一次字符串 needle 在字符串 haystack 中的出现（因为此时真前缀恰为字符串 needle，真后缀为以当前位置为结束位置的字符串 haystack 的子串），我们计算出起始位置，将其返回即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">strStr</span><span class="params">(string haystack, string needle)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = haystack.<span class="built_in">size</span>(), m = needle.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">pi</span><span class="params">(m)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; needle[i] != needle[j]) &#123;</span><br><span class="line">                j = pi[j - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (needle[i] == needle[j]) &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            pi[i] = j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; haystack[i] != needle[j]) &#123;</span><br><span class="line">                j = pi[j - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (haystack[i] == needle[j]) &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j == m) &#123;</span><br><span class="line">                <span class="keyword">return</span> i - m + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string/solutions/732236/shi-xian-strstr-by-leetcode-solution-ds6y/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><hr><p>PS:目前看不懂kmp，先搁在这，题解里还有更详细的kmp图解，到时候再看看。</p><hr><p><a href="https://www.cnblogs.com/YWT-Real/p/17063212.html">https://www.cnblogs.com/YWT-Real/p/17063212.html</a></p><p>上面的kmp图解看懂了，不会可以去看看。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::vector&lt;<span class="type">int</span>&gt; <span class="title">buildNext</span><span class="params">(std::string p)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n = p.<span class="built_in">length</span>();</span><br><span class="line">    <span class="function">std::vector&lt;<span class="type">int</span>&gt; <span class="title">next</span><span class="params">(n)</span></span>;</span><br><span class="line">    next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n - <span class="number">1</span>; k++) &#123;</span><br><span class="line">        <span class="type">int</span> t = next[k];</span><br><span class="line">        <span class="keyword">while</span> (t != <span class="number">-1</span> &amp;&amp; p[k] != p[t]) &#123;</span><br><span class="line">            t = next[t];</span><br><span class="line">        &#125;</span><br><span class="line">        next[k + <span class="number">1</span>] = t + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">kmp</span><span class="params">(std::string t, std::string p)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> m = t.<span class="built_in">length</span>(), n = p.<span class="built_in">length</span>();</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> next = <span class="built_in">buildNext</span>(p);</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m &amp;&amp; j &lt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j &lt; <span class="number">0</span> || t[i] == p[j]) &#123;</span><br><span class="line">            i++; j++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            j = next[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> j == n ? i - j : <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode389.找不同</title>
      <link href="/2025/10/10/leetcode389.%E6%89%BE%E4%B8%8D%E5%90%8C/"/>
      <url>/2025/10/10/leetcode389.%E6%89%BE%E4%B8%8D%E5%90%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="1-自己的写法-3">1 自己的写法</h2><ul><li>执行用时分布 0ms 击败 100.00%</li><li>时间复杂度 O(N)</li><li>消耗内存分布 8.86MB 击败 99.64%</li><li>空间复杂度 O(1)</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="type">char</span> <span class="title">findTheDifference</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; t.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">      num += t[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">      num -= s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-1-官方题解-3">2.1 官方题解</h2><p><em><strong>方法一：计数</strong></em></p><p>首先遍历字符串 s，对其中的每个字符都将计数值加 1；然后遍历字符串 t，对其中的每个字符都将计数值减 1。当发现某个字符计数值为负数时，说明该字符在字符串 t 中出现的次数大于在字符串 s 中出现的次数，因此该字符为被添加的字符。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">char</span> <span class="title">findTheDifference</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cnt</span><span class="params">(<span class="number">26</span>, <span class="number">0</span>)</span></span>;<span class="comment">//vector 是一个动态数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch: s) &#123;</span><br><span class="line">            cnt[ch - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch: t) &#123;</span><br><span class="line">            cnt[ch - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">            <span class="keyword">if</span> (cnt[ch - <span class="string">&#x27;a&#x27;</span>] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> ch;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/find-the-difference/solutions/525705/zhao-bu-tong-by-leetcode-solution-mtqf/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><p><em><strong>方法二：求和</strong></em></p><p>将字符串 s 中每个字符的 ASCII 码的值求和，得到 As；对字符串 t 同样的方法得到 At。两者的差值 At−As 即代表了被添加的字符。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">char</span> <span class="title">findTheDifference</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> as = <span class="number">0</span>, at = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch: s) &#123;<span class="comment">// （）内表示遍历字符串s</span></span><br><span class="line">            as += ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch: t) &#123;</span><br><span class="line">            at += ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> at - as;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/find-the-difference/solutions/525705/zhao-bu-tong-by-leetcode-solution-mtqf/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><p><em><strong>方法三：位运算</strong></em></p><p>如果将两个字符串拼接成一个字符串，则问题转换成求字符串中出现奇数次的字符。类似于 「136. 只出现一次的数字」，我们使用位运算的技巧解决本题。</p><p>！！！（相同两数按位异或^ = 0。0 ^任何数 = 数本身。^满足交换律）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">char</span> <span class="title">findTheDifference</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch: s) &#123;</span><br><span class="line">            ret ^= ch;<span class="comment">//^= 按位异或赋值运算符 相当于a=a^b</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> ch: t) &#123;</span><br><span class="line">            ret ^= ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/find-the-difference/solutions/525705/zhao-bu-tong-by-leetcode-solution-mtqf/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><hr><ul><li><p>^= 是C++ 中的 按位异或赋值运算符。 它将变量的当前值与另一个值进行按位异或运算（按二进制运算），然后将结果存储回原变量中。 等同于 a = a ^ b 的缩写形式。</p><ul><li><p>按位异或（^）：: 对两个操作数的每一位进行比较。 如果两个位相同，则结果为0；如果两个位不同，则结果为 1。</p></li><li><p>赋值（=）：: 将右侧表达式的计算结果赋值给左侧的变量。</p></li><li><p>^= 组合：: 将按位异或和赋值操作结合在一起。</p></li></ul></li></ul><hr><p>PS:官方题解第一个有点不会，问一下</p><p>PS:这个大佬太强了，但是JavaScript我不会，先把链接放在这，我以后慢慢品鉴。</p><p><a href="https://leetcode.cn/problems/find-the-difference/solutions/526341/wei-ji-shu-wei-yi-lei-jia-ti-huan-sort1x-s0li">https://leetcode.cn/problems/find-the-difference/solutions/526341/wei-ji-shu-wei-yi-lei-jia-ti-huan-sort1x-s0li</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode1768.交替合并字符串</title>
      <link href="/2025/10/09/leetcode1768.%E4%BA%A4%E6%9B%BF%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2025/10/09/leetcode1768.%E4%BA%A4%E6%9B%BF%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="1-自己的写法-4">1 自己的写法</h2><ul><li>执行用时分布 0ms 击败 100.00%</li><li>时间复杂度 O(N)</li><li>消耗内存分布 8.47MB 击败 44.58%</li><li>空间复杂度 O(N)</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function">string <span class="title">mergeAlternately</span><span class="params">(string word1, string word2)</span> </span>&#123;</span><br><span class="line">    string word3 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">int</span> len1 = word1.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> len2 = word2.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">max</span>(len1, len2); i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (i &lt; len1) &#123;</span><br><span class="line">        word3 += word1[i];</span><br><span class="line">        <span class="comment">//+= 用于将整个字符串或字符序列追加到字符串末尾</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (i &lt; len2) &#123;</span><br><span class="line">        word3 += word2[i];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> word3;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-1-官方题解-4">2.1 官方题解</h2><p><em><strong>方法一：双指针</strong></em></p><p>我们直接按照题目的要求模拟即可。我们使用两个指针 i 和 j，初始时分别指向两个字符串的首个位置。随后的每次循环中，依次进行如下的两步操作：</p><ul><li><p>如果 i 没有超出 word1 的范围，就将 word1[i] 加入答案，并且 i 移动一个位置；</p></li><li><p>如果 j 没有超出 word2 的范围，就将 word2[j] 加入答案，并且将 j 移动一个位置。</p></li></ul><p>当 i 和 j 都超出对应的范围后，结束循环并返回答案即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">mergeAlternately</span><span class="params">(string word1, string word2)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> m = word1.<span class="built_in">size</span>(), n = word2.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        string ans;</span><br><span class="line">        ans.<span class="built_in">reserve</span>(m + n);</span><br><span class="line">        <span class="keyword">while</span> (i &lt; m || j &lt; n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; m) &#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(word1[i]);</span><br><span class="line">                <span class="comment">//push_back() 用于将单个字符追加到字符串末尾</span></span><br><span class="line">                <span class="comment">//append() 用于将子字符串或字符序列追加到字符串末尾</span></span><br><span class="line">                ++i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j &lt; n) &#123;</span><br><span class="line">                ans.<span class="built_in">push_back</span>(word2[j]);</span><br><span class="line">                ++j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：力扣官方题解</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/merge-strings-alternately/solutions/1913930/jiao-ti-he-bing-zi-fu-chuan-by-leetcode-ac4ih/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><h2 id="2-2-递归解法">2.2 递归解法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">mergeAlternately</span><span class="params">(string word1, string word2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(word1 == <span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> word2;</span><br><span class="line">        <span class="keyword">if</span>(word2 == <span class="string">&quot;&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> word1;</span><br><span class="line">        string res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        res += word1[<span class="number">0</span>];</span><br><span class="line">        res += <span class="built_in">mergeAlternately</span>(word2, word1.<span class="built_in">substr</span>(<span class="number">1</span>));<span class="comment">//交换参数位置，并去掉用过的那个字符</span></span><br><span class="line">        <span class="comment">//str.substr(pos, len)：:</span></span><br><span class="line">        <span class="comment">// 从字符串 str 的 pos 位置开始，提取长度为 len 的子字符串。</span></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：慢七分</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/merge-strings-alternately/solutions/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><h2 id="2-3-按索引复制字符">2.3 按索引复制字符</h2><p>先按索引复制两个字符串都能所及的 mi 长度的字符串，再把多的一条字符串复制出来。这里是用 STL 的copy函数做的。</p><p>（题外话，关于公式 x×2 究竟是写x<em>2还是x&lt;&lt;1，现代编译器其实已经能自动优化这种代码。甚至，同样地，它会将x</em>10编译成(x&lt;&lt;3)+(x&lt;&lt;1)，所以没啥必要手写&lt;&lt;1）</p><p>以上为作者引言</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">mergeAlternately</span><span class="params">(string a, string b)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = a.<span class="built_in">size</span>(), m = b.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> mi = <span class="built_in">min</span>(n, m);</span><br><span class="line">        <span class="function">string <span class="title">s</span><span class="params">(n + m, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; mi; ++i)</span><br><span class="line">            s[i * <span class="number">2</span>] = a[i], s[i * <span class="number">2</span> | <span class="number">1</span>] = b[i]; <span class="comment">// *2|1相当于 *2+1</span></span><br><span class="line">            <span class="comment">//*2这部分与奇数位偶数位有关</span></span><br><span class="line">        <span class="keyword">if</span> (n == mi) <span class="comment">//如果 a 较短，就把 b 多出来的部分复制过来</span></span><br><span class="line">            <span class="built_in">copy</span>(b.<span class="built_in">begin</span>() + mi, b.<span class="built_in">end</span>(), s.<span class="built_in">begin</span>() + mi * <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">copy</span>(a.<span class="built_in">begin</span>() + mi, a.<span class="built_in">end</span>(), s.<span class="built_in">begin</span>() + mi * <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：BAC</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/merge-strings-alternately/solutions/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><p>所谓紧凑版</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n,m,mi;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">mergeAlternately</span><span class="params">(string a, string b)</span> </span>&#123;</span><br><span class="line">        n=a.<span class="built_in">size</span>();m=b.<span class="built_in">size</span>();</span><br><span class="line">        mi=<span class="built_in">min</span>(n,m);</span><br><span class="line">        <span class="function">string <span class="title">s</span><span class="params">(n+m,<span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;mi;++i)s[i*<span class="number">2</span>]=a[i],s[i*<span class="number">2</span>|<span class="number">1</span>]=b[i];</span><br><span class="line">        <span class="keyword">if</span>(n==mi)<span class="built_in">copy</span>(b.<span class="built_in">begin</span>()+mi,b.<span class="built_in">end</span>(),s.<span class="built_in">begin</span>()+mi*<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">else</span>     <span class="built_in">copy</span>(a.<span class="built_in">begin</span>()+mi,a.<span class="built_in">end</span>(),s.<span class="built_in">begin</span>()+mi*<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">作者：BAC</span><br><span class="line">链接：https:<span class="comment">//leetcode.cn/problems/merge-strings-alternately/solutions/</span></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><hr><ul><li><p>append() 函数有多种重载版本，可以执行以下操作：</p><ul><li>添加完整的字符串： 将另一个std::string对象的内容附加到当前字符串的末尾。</li></ul><blockquote><p>例如：str1.append(str2);</p></blockquote><ul><li>添加字符串的子串： 从另一个字符串中截取一部分并追加。</li></ul><blockquote><p>例如：str1.append(str2, 11, 7);（从str2的第11个字符开始，追加7个字符）</p></blockquote><ul><li>添加C字符串的一部分： 从一个C风格字符串（char*）中追加一部分字符。</li></ul><blockquote><p>例如：str1.append(c_str, 3);（追加c_str的前3个字符）</p></blockquote><ul><li>添加指定数量的字符： 追加多个相同的字符。</li></ul><blockquote><p>例如：str1.append(5, ‘.’);（追加5个<code>.</code>）</p></blockquote><ul><li>添加迭代器范围内的字符序列： 通过迭代器指定一个字符序列（如 std::vector 中的元素）添加到字符串末尾。</li></ul></li><li><p>push_back</p><ul><li><p>push_back 是标准模板库（STL）中容器（如 vector 和 string）的成员函数，用于在容器的尾部添加一个新元素。 它接受一个待添加的元素，并通过复制（拷贝）或移动的方式将元素插入到容器的末端，增加容器的大小。 对于 vector，它通常会触发内存扩容来容纳新元素；对于 string，则用于在字符串末尾追加一个字符。</p></li><li><p>核心作用</p><ul><li><p>尾部添加元素：: push_back 的主要功能是在容器的末尾添加一个元素。</p></li><li><p>自动扩展：: 当容器没有足够空间来容纳新元素时，它会动态地分配更大的内存空间，通常是当前容量的两倍，以保证连续存储。</p></li><li><p>支持拷贝和移动：: 函数会使用元素的拷贝构造函数或移动构造函数将元素放入容器中。</p></li></ul></li><li><p>与 emplace_back 的区别</p><ul><li><p>push_back： 先在容器外部创建一个元素（临时对象），然后将其拷贝或移动到容器中。</p></li><li><p>emplace_back（ C++11 及之后）：直接在容器的末尾原位构造（创建）元素，避免了创建临时对象的步骤，从而减少了拷贝和移动的开销，通常具有更高的性能。</p></li></ul></li></ul></li><li><p>std::copy 函数</p><ul><li><p>std::copy 是一个用于将元素从一个范围复制到另一个范围的标准库算法。</p></li><li><p>作用: 将源范围内的元素复制到目标位置。</p></li><li><p>头文件: &lt; algorithm &gt;。</p></li><li><p>语法: std::copy(InputIterator first, InputIterator last, OutputIterator result);</p><ul><li><p>first: 源范围的起始迭代器。</p></li><li><p>last: 源范围的结束迭代器，不包含 last 指向的元素。</p></li><li><p>result: 目标范围的起始迭代器，表示复制后的元素从该位置开始存储。</p></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++</title>
      <link href="/2025/08/11/C++/"/>
      <url>/2025/08/11/C++/</url>
      
        <content type="html"><![CDATA[<h2 id="1-C-初识">1. C++初识</h2><h3 id="1-1-注释">1.1 注释</h3><ol><li><p>单行注释：//或CTRL+/（快捷键）</p></li><li><p>多行注释：/<em>内容</em>/</p></li></ol><h3 id="1-2-变量">1.2 变量</h3><p>语法：数据类型 变量名 = 初始值</p><blockquote><p>int a = 10;</p></blockquote><h3 id="1-3-常量">1.3 常量</h3><ol><li>**#define#**宏常量： #define 常量名 常量值</li></ol><ul><li>==通常在文件上方定义==，表示一个常量</li></ul><blockquote><p>#define day 7</p></blockquote><ol start="2"><li><strong>const</strong>修饰的变量： const 数据类型 常量名 = 常量值</li></ol><ul><li>==通常在变量定义前加关键词const==，修饰该变量为常量，不可修改</li></ul><blockquote><p>const int month = 12;</p></blockquote><h3 id="1-4-关键字">1.4 关键字</h3><p>*定义变量或者常量时，不要用关键字</p><table><thead><tr><th>asm</th><th>do</th><th>if</th><th>return</th><th>typedef</th></tr></thead><tbody><tr><td>auto</td><td>double</td><td>inline</td><td>short</td><td>typeid</td></tr><tr><td>bool</td><td>dynamic_cast</td><td>int</td><td>signed</td><td>typename</td></tr><tr><td>break</td><td>else</td><td>long</td><td>sizeof</td><td>union</td></tr><tr><td>case</td><td>enum</td><td>mutable</td><td>static</td><td>unsigned</td></tr><tr><td>catch</td><td>explicit</td><td>namespace</td><td>static_cast</td><td>using</td></tr><tr><td>char</td><td>export</td><td>new</td><td>struct</td><td>virtual</td></tr><tr><td>class</td><td>extern</td><td>operator</td><td>switch</td><td>void</td></tr><tr><td>const</td><td>false</td><td>private</td><td>templat</td><td>volatile</td></tr><tr><td>const_cast</td><td>float</td><td>protected</td><td>this</td><td>wchar_t</td></tr><tr><td>continue</td><td>for</td><td>public</td><td>throw</td><td>while</td></tr><tr><td>default</td><td>friend</td><td>register</td><td>true</td><td></td></tr><tr><td>delete</td><td>goto</td><td>reinterpret_cast</td><td>try</td><td></td></tr></tbody></table><h3 id="1-5-标识符命名规则">1.5 标识符命名规则</h3><ul><li><p>不是关键字</p></li><li><p>只能是字母、数字、下划线组成</p></li><li><p>第一个字符为字符或下划线</p></li><li><p>字母区分大小写</p></li></ul><h2 id="2-数据类型">2. 数据类型</h2><h3 id="2-1-整型">2.1 整型</h3><ul><li>区别在于所占内存空间不同</li></ul><table><thead><tr><th>数据类型</th><th>占用空间</th><th>取值范围</th></tr></thead><tbody><tr><td>short（短整型）</td><td>2字节</td><td>-2^15~2^15-1</td></tr><tr><td>==int（整型）==</td><td>4字节</td><td>-2^31~2^31-1</td></tr><tr><td>long（长整型）</td><td>Windows为4字节，Linux为4字节（32位），8字节（64位）</td><td>-2^31~2^31-1</td></tr><tr><td>long long（长长整型）</td><td>8字节</td><td>-2^63~2^63-1</td></tr></tbody></table><h3 id="2-2-sizeof关键字">2.2 sizeof关键字</h3><ul><li>统计数据类型所占内存大小</li></ul><blockquote><p>sizeof(数据类型/变量)</p></blockquote><h3 id="2-3-实型-浮点型">2.3 实型/浮点型</h3><ul><li>用于表示小数（默认情况下输出小数，会显示6位有效数字）</li></ul><ol><li>单精度float</li></ol><blockquote><p>float f1 =3.14f;</p><p>cout &lt;&lt; “f1=” &lt;&lt; f1 &lt;&lt; endl;</p></blockquote><ol start="2"><li>双精度double</li></ol><blockquote><p>double d1 =3.14;</p><p>cout &lt;&lt; “d1=” &lt;&lt; d1 &lt;&lt; endl;</p></blockquote><table><thead><tr><th>数据类型</th><th>占用空间</th><th>有效数字范围</th></tr></thead><tbody><tr><td>float</td><td>4字节</td><td>7位</td></tr><tr><td>double</td><td>8字节</td><td>15~16位</td></tr></tbody></table><p>3.科学计数法</p><blockquote><p>float f2 = 3e2;//3*10^2</p></blockquote><h3 id="2-4-字符型">2.4 字符型</h3><blockquote><p>char ch =‘a’;</p></blockquote><ul><li><p>用单引号将字符型变量括起来，且引号内只能有一个字符</p></li><li><p>c和cpp中字符型变量只占1个字节</p></li><li><p>字符型变量是将对应的ASCII编码放入存储单元(a-97 A-65)</p></li></ul><blockquote><p>cout &lt;&lt; (int) ch &lt;&lt; endl;//输出字符的ASCII编码</p></blockquote><h3 id="2-5-转义字符">2.5 转义字符</h3><ul><li><p>用于表示不能显示出来的ASCII字符</p></li><li><p>常用：\n(换行符)  \（反斜杠）  \t（水平制表）</p></li></ul><blockquote><p>cout &lt;&lt;“hello world\n”;</p><p>cout &lt;&lt;“\”&lt;&lt; endl;</p><p>cout &lt;&lt;“aaa\thelloworld”&lt;&lt; endl;</p></blockquote><h3 id="2-6-字符串型">2.6 字符串型</h3><p>1.<strong>C风格字符串</strong>：char 变量名[] = “字符串值”</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">    cout &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>C风格字符串要用双引号括起来</p></blockquote><p>2.<strong>C++风格字符串</strong>：string 变量名 = “字符串值”</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span><span class="comment">//用c++风格字符串需要此头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string str2 = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">    cout &lt;&lt; str2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意包含一个头文件 #include &lt; string &gt;</p></blockquote><h3 id="2-7-布尔类型-bool">2.7 布尔类型 bool</h3><p>bool类型只有两个值,占一个字节</p><ul><li><p>true  - 真（本质是1）</p></li><li><p>false - 假（本质是0）</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;<span class="comment">//1</span></span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;<span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">bool</span>)&lt;&lt; endl;<span class="comment">//1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-8-数据的输入">2.8 数据的输入</h3><blockquote><p>cin&gt;&gt;变量</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//整型</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给整型变量a赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;整型变量a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//浮点型</span></span><br><span class="line">    <span class="type">float</span> f = <span class="number">3.14f</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给浮点型变量f赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; f;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;浮点型变量f=&quot;</span> &lt;&lt; f &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符型</span></span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给字符型变量ch赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;字符型变量ch=&quot;</span> &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符串型</span></span><br><span class="line">    string str = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给字符串 str赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; str;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;字符串str=&quot;</span> &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//布尔类型</span></span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给布尔类型 flag赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; flag;<span class="comment">//布尔类型只要是非0的值都代表1</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;布尔类型flag=&quot;</span> &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-运算符">3. 运算符</h2><h3 id="3-1-算数运算符">3.1 算数运算符</h3><ul><li>用于处理四则运算</li></ul><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>+</td><td>正号</td><td>+3</td><td>3</td></tr><tr><td>-</td><td>负号</td><td>-3</td><td>-3</td></tr><tr><td>+</td><td>加</td><td>10+5</td><td>15</td></tr><tr><td>-</td><td>减</td><td>10-5</td><td>5</td></tr><tr><td>*</td><td>乘</td><td>10*5</td><td>50</td></tr><tr><td>/</td><td>除</td><td>10/5</td><td>2</td></tr><tr><td>%</td><td>取模（取余）</td><td>10%3</td><td>1</td></tr><tr><td>++</td><td>前置递增</td><td>a=2;b=++a;</td><td>a=3;b=3;</td></tr><tr><td>++</td><td>后置递减</td><td>a=2;b=a++;</td><td>a=3;b=2;</td></tr><tr><td>–</td><td>前置递减</td><td>a=2;b=–a;</td><td>a=1;b=1;</td></tr><tr><td>–</td><td>前置递减</td><td>a=2;b=a–;</td><td>a=1;b=2;</td></tr></tbody></table><ul><li><p>两个整数相除会把小数部分去除掉</p></li><li><p>小数不能进行取模运算</p></li></ul><blockquote><p>前置递增：</p><p>int a = 10;</p><p>++a</p><p>后置递增：</p><p>int b = 10;</p><p>b++</p></blockquote><ul><li>前置先加1后运算，后置先运算后加1</li></ul><h3 id="3-2-赋值运算符">3.2 赋值运算符</h3><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>a=2;b=3;</td><td>a=2;b=3;</td></tr><tr><td>+=</td><td>加等于</td><td>a=0;a+=2;</td><td>a=2;</td></tr><tr><td>-=</td><td>减等于</td><td>a=5;a-=3;</td><td>a=2;</td></tr><tr><td>*=</td><td>乘等于</td><td>a=2;a*=2;</td><td>a=4;</td></tr><tr><td>/=</td><td>除等于</td><td>a=4;a/=2;</td><td>a=2;</td></tr><tr><td>%=</td><td>模等于</td><td>a=3;a%=2;</td><td>a=1;</td></tr></tbody></table><h3 id="3-3-比较运算符">3.3 比较运算符</h3><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>==</td><td>相等于</td><td>4==3</td><td>0</td></tr><tr><td>!=</td><td>不等于</td><td>4!=3</td><td>1</td></tr><tr><td>&lt;</td><td>小于</td><td>4&lt;3</td><td>0</td></tr><tr><td>&gt;</td><td>大于</td><td>4&gt;3</td><td>1</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>4&lt;=3</td><td>0</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>4&gt;=</td><td>1</td></tr></tbody></table><blockquote><p>cout &lt;&lt; (a==b) &lt;&lt; endl;</p></blockquote><h3 id="3-4-逻辑运算符">3.4 逻辑运算符</h3><table><thead><tr><th>运算符</th><th>术语</th><th>示例</th><th>结果</th></tr></thead><tbody><tr><td>!</td><td>非</td><td>!a</td><td>如果a假则!a真；反之</td></tr><tr><td>&amp;&amp;</td><td>与</td><td>a&amp;&amp;b</td><td>如果a和b都为真则结果为真，否则为假</td></tr><tr><td>||</td><td>或</td><td>a||b</td><td>如果a和b有一个为真则结果为真，二者都为假结果为假</td></tr></tbody></table><blockquote><p>在C++中除了0都是真,真变假，假变真</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; !a &lt;&lt; endl;<span class="comment">//0</span></span><br><span class="line">cout &lt;&lt; !!a &lt;&lt; endl;<span class="comment">//1</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a&amp;&amp;b) &lt;&lt; endl;</span><br><span class="line"><span class="comment">//同真为真，其余为假</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (a||b) &lt;&lt; endl;</span><br><span class="line"><span class="comment">//同假为假，其余为真</span></span><br></pre></td></tr></table></figure><h2 id="4-程序流程结构">4. 程序流程结构</h2><ul><li>三种：顺序结构、选择结构、循环结构</li></ul><h3 id="4-1-选择结构">4.1 选择结构</h3><h4 id="4-1-1-if语句">4.1.1 if语句</h4><ol><li>单行格式if语句：if（条件）{条件满足执行代码}</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//用户输入分数，如果分数大于600，是为考上一本</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.用户输入分数</span></span><br><span class="line">    <span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入一个分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.打印用户输入的分数</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; 您输入的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.判断分数是否大于600，如果大于则输出</span></span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">600</span>)<span class="comment">//if条件代码后面不要加“;”，否则不管条件满不满足都会执行&#123;&#125;中代码</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>多行格式if语句：if（条件）{条件满足执行的语句}else{条件不满足执行的语句}；</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//输入考试分数，如果大于600，视为考上一本并输出，如果没考上一本，打印未考上一本大学</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.输入考试分数</span></span><br><span class="line">    <span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入一个分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.提示用户分数</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您输入的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.判断 如果大于600，打印考上一本</span></span><br><span class="line">    <span class="comment">// 否则打印未考上一本</span></span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;恭喜考上一本大学&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;未考上一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>多条件的if语句：if（条件1）{条件1满足执行的语句}else if（条件2）{条件2满足执行的语句}……else{都不满足执行的语句}</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//输入考试分数，如果大于600视为考上一本并输出</span></span><br><span class="line">    <span class="comment">//大于500视为考上二本并输出</span></span><br><span class="line">    <span class="comment">//大于400视为考上三本并输出</span></span><br><span class="line">    <span class="comment">//小于等于400分视为未考上本科并输出</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.用户输入分数</span></span><br><span class="line">    <span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入考试分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.提示用户输入的分数</span></span><br><span class="line">    cout &gt;&gt; <span class="string">&quot;您输入的分数为：&quot;</span> &gt;&gt; score &gt;&gt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.判断</span></span><br><span class="line">    <span class="comment">//如果大于600为一本</span></span><br><span class="line">    <span class="comment">//如果大于500为二本</span></span><br><span class="line">    <span class="comment">//如果大于400为三本</span></span><br><span class="line">    <span class="comment">//前三个都没有满足，未考上本科</span></span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;恭喜您考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;恭喜您考上了二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;恭喜您考上了三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;未考上本科大学，请再接再厉&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>嵌套if语句</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    -分数大于600上一本，大于500上二本，大于400上三本，其余未考上本科</span></span><br><span class="line"><span class="comment">    -一本中，大于700上北大，大于650上清华，大于600上人大</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.输入分数</span></span><br><span class="line">    <span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入分数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.显示分数</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您输入的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.判断</span></span><br><span class="line">    <span class="comment">//如果大于600 一本</span></span><br><span class="line">      <span class="comment">//大于700 北大</span></span><br><span class="line">      <span class="comment">//大于650 清华</span></span><br><span class="line">      <span class="comment">//大于600 人大</span></span><br><span class="line">    <span class="comment">//如果大于500 二本</span></span><br><span class="line">    <span class="comment">//如果大于400 三本</span></span><br><span class="line">    <span class="comment">//其余情况 未考上本科</span></span><br><span class="line">    <span class="keyword">if</span> (score &gt; <span class="number">600</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;恭喜您考上了一本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">      <span class="keyword">if</span> (score &gt; <span class="number">700</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您能考入北大&quot;</span> &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">650</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您能考入清华&quot;</span> &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您能考入人大&quot;</span> &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">500</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;恭喜您考上了二本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">400</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;恭喜您考上了三本大学&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;未考上本科大学，请再接再厉&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>练习案例</strong>：三只小猪称体重</li></ul><p>有三只小猪abc，输入各自体重并判断谁最重</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//创建三只小猪变量</span></span><br><span class="line">    <span class="type">int</span> piga = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> pigb = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> pigc = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入三只小猪重量</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入小猪a的体重：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; piga;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入小猪b的体重：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; pigb;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入小猪c的体重：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; pigc;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;小猪a的体重为：&quot;</span> &lt;&lt; piga &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;小猪b的体重为：&quot;</span> &lt;&lt; pigb &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;小猪c的体重为：&quot;</span> &lt;&lt; pigc &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断哪只最重</span></span><br><span class="line">    <span class="comment">//先判断a和b的重量</span></span><br><span class="line">    <span class="keyword">if</span> (piga &gt; pigb)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (piga &gt; pigc)</span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;小猪a最重&quot;</span> &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;小猪c最重&quot;</span> &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (pigb &gt; pigc)</span><br><span class="line">        &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;小猪b最重&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          cout &lt;&lt; <span class="string">&quot;小猪c最重&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-1-2-三目运算符">4.1.2 三目运算符</h4><p><strong>语法</strong>：表达式1 ? 表达式2 : 表达式3</p><p><strong>解释</strong>：</p><p>表达式1为真，执行表达式2，并返回结果</p><p>表达式1为假，执行表达式3，并返回结果</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//创建三个变量abc</span></span><br><span class="line">    <span class="comment">//将a和b作比较，将变量大的值赋值给变量c</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    c = (a &gt; b ? a : b);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;c=&quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在c++中三目运算符返回的是变量，可以继续赋值</span></span><br><span class="line">    (a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;b=&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-1-3-switch语句">4.1.3 switch语句</h4><p><strong>作用</strong>：执行多条件分支语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">swich(表达式)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  case 结果1：执行语句;break;</span><br><span class="line"></span><br><span class="line">  case 结果1：执行语句;break;</span><br><span class="line"></span><br><span class="line">  ···</span><br><span class="line"></span><br><span class="line">  default:执行语句;break;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//给电影打分</span></span><br><span class="line">    <span class="comment">//10~9 经典</span></span><br><span class="line">    <span class="comment">//8~7 非常好</span></span><br><span class="line">    <span class="comment">//6~5 一般</span></span><br><span class="line">    <span class="comment">//5以下 烂片</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.提示用户评分</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请给电影打分&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//2.用户开始打分</span></span><br><span class="line">    <span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; score;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;您打的分数为：&quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line">    <span class="comment">//3.根据分数来提示结果</span></span><br><span class="line">    <span class="keyword">switch</span>(score)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为是经典电影&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;<span class="comment">//退出当前分支</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为是经典电影&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为电影非常好&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为电影非常好&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为电影一般&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为电影一般&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您认为这是烂片&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>if和switch的区别？</li></ul><p>switch的缺点：判断时候只能是整型或字符型，不可以是区间<br>switch的优点：结构清晰，执行效率高</p><h3 id="4-2-循环结构">4.2 循环结构</h3><h4 id="4-2-1-while循环">4.2.1 while循环</h4><p><strong>语法</strong>：while（循环条件）{循环语句}</p><p><strong>解释</strong>：只要循环条件的结果为真，就执行循环语句</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//在屏幕中打印0~9这10个数字</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>；</span><br><span class="line"></span><br><span class="line">    <span class="comment">//*避免死循环出现</span></span><br><span class="line">    <span class="keyword">while</span> (num &lt; <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">      num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>while循环练习案例</strong>：猜数字</p><p>系统随机生成一个1到100之间的数字，玩家进行猜测，如果猜错，提示玩家过大或过小，如果猜对恭喜胜利，并退出游戏</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//time系统时间头文字包含</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//添加随机数种子利用当前系统时间生成随机数，防止每次随机数都一样</span></span><br><span class="line">    <span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="comment">//1.系统生成随机数</span></span><br><span class="line">    <span class="type">int</span> num = <span class="built_in">rand</span>()%<span class="number">100</span>+<span class="number">1</span>;<span class="comment">//rand()%100+1生成0+1~99+1的随机数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.玩家进行猜测</span></span><br><span class="line">    <span class="type">int</span> val = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      cin &gt;&gt; val;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//3.判断玩家的结果</span></span><br><span class="line">      <span class="keyword">if</span> (val &gt; num)</span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;猜测过大&quot;</span> &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (val &lt; num)</span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;猜测过小&quot;</span> &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;猜对了&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">break</span>;<span class="comment">//break可以推出当前循环</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-2-do…while循环语句">4.2.2 do…while循环语句</h4><p><strong>语法</strong>：do{循环语句}while(循环条件);</p><p><strong>注意</strong>：与while的区别在于do…while会先执行一次循环语句，再判断循环条件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//在屏幕中输出0~9这10个数字</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; num &lt;&lt;endl;</span><br><span class="line">      num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(num &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习案例</strong>：水仙花数</p><p>水仙花数是指一个3位数，它的每个位上的数的三次幂之和等于它本身，利用do…while求出所有三位数中的水仙花数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1.先打印所有三位数字</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//2.从所有三位数字中找到水仙花数</span></span><br><span class="line">      <span class="type">int</span> a = <span class="number">0</span>;<span class="comment">//个位</span></span><br><span class="line">      <span class="type">int</span> b = <span class="number">0</span>;<span class="comment">//十位</span></span><br><span class="line">      <span class="type">int</span> c = <span class="number">0</span>;<span class="comment">//百位</span></span><br><span class="line"></span><br><span class="line">      a = num%<span class="number">10</span>;</span><br><span class="line">      b = num/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">      c = num%<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(a*a*a+b*b*b+c*c*c==num)<span class="comment">//c++不支持次方运算</span></span><br><span class="line">      &#123;</span><br><span class="line">      cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(num &lt; <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-3-for循环语句">4.2.3 for循环语句</h4><p><strong>语法</strong>：for(起始表达式;条件表达式;末尾循环体){循环语句;}</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//从数字0打印到数字9</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      cout &lt;&lt; i &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习案例</strong>：敲桌子</p><p>从1开始到100，如果数字个位含有7，或者数字十位含有7，或者该数字是7的倍数，打印敲桌子，其余数字直接打印输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//1.先输入1~100数字</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">100</span>;i++)</span><br><span class="line">    &#123;<span class="comment">//2.从100个数字中找到特殊数字，打印敲桌子</span></span><br><span class="line">      <span class="keyword">if</span>(i%<span class="number">7</span>==<span class="number">0</span>||i%<span class="number">10</span>==<span class="number">7</span>||i/<span class="number">10</span>==<span class="number">7</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;敲桌子&quot;</span> &lt;&lt; endl;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt;endl;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-4-嵌套循环">4.2.4 嵌套循环</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//外层执行一次，内层执行一周</span></span><br><span class="line">    <span class="comment">//外层循环</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//内层循环</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; <span class="number">10</span>;j++)</span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;* &quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>练习案例</strong>：乘法口诀表</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">9</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>;j &lt;= i;j++)</span><br><span class="line">      &#123;</span><br><span class="line">        cout &lt;&lt; j &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; i*j &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水</title>
      <link href="/2023/08/07/%E6%B0%B4/"/>
      <url>/2023/08/07/%E6%B0%B4/</url>
      
        <content type="html"><![CDATA[<p>雾气逐渐蔓延上眼前的玻璃屏罩，眼前黑暗中闪烁着诡秘的荧光。</p><p>隔离服厚重且不透气，明明外部是沁骨的严寒，繁厚服装之下也能使人浸出一身汗。</p><p>我感受到随着时间的流逝，外部的寒冷正在逐渐越过层层的隔离服，刺入分泌的汗液中，然后缓慢地冷冻着身体。</p><p>我加快了行动的速度，用手拨开黑暗中的荧光，并打开了身上携带的照明灯，手中紧攥着的是一株株畸形的、明显并非地球所属的植物。</p><p>我慌忙在四周拨开半人高的植物丛，弯腰向其根部探去，终于摸到了几颗怪异的果实。我顺势向其他植物根摸去，等到收集了一大把之后全部放进身上的袋子里，然后转身向远处闪着亮光的巨型壁罩走去。</p><p>辐射着黄色柔光的壁罩是广阔无垠的黑暗中唯一光亮，其中以核心部位最为明亮，越往外围越黑暗。</p><p>这种巨型壁罩遍布世界各地，没有什么比它更舒适，也没有什么比它更残酷。它们被建造以抵御严寒与植物的侵袭。</p><p>我走到壁罩的入口旁，示意远处的戍卫兵放行，随后将手放在壁罩上。不过一会，原本坚硬的壁罩变得如雨雾般虚幻，逐渐柔和下来，我抬脚进入，就犹如泡与细胞膜在进行融合，完全融进了壁罩，而身后残留的，是被壁罩排异的、从我身上脱离的畸形植物与生物，那些不属于人类社会的产物。</p><p>“这次收成怎么样？”守在不远处的一人说。</p><p>“编辑体42，勉强凑合。”我摘下让我快要窒息的面罩，轻轻拍了拍身上的口袋。</p><p>“啊，老古董了，味道不错。”那人像是细细品味，然后再叹息：“这么多年还是只编辑了112个怪东西，再不发现点新奇迹，我们迟早得饿死。”</p><p>壁罩里的人很少拥有姓名，至少是不愿意告诉别人。我和这个人很熟，我叫他X。</p><p>“种子怎么样？”我问X。</p><p>“从中间开始发，老样子，你知道的，到周围几乎都快没了。”</p><p>“难怪最近这么多拾荒者。”我听到身后的声响，向壁罩外看去，是另外几个和我一样的拾荒者。</p><p>“走吧，喝一杯，把你的那些42给吃了。”X不想管那些人，向里走去。</p><p>壁罩外围地区因为太过远离核心而显得昏暗，就像七八点的街市，只能用霓虹灯和电子亮光来照亮。</p><p>最外围市区的灯光很微弱，我甚至觉得和那些外面的荧光一样亮。</p><p>“这里怎么老是这么冷，那些地热铁定被中间那块给拿走了！”X突然愤愤地说，使劲裹紧了自己身上的衣服，我因为还穿着隔离服，所以没有太大感觉。</p><p>为了防止植物浸入壁罩，壁罩范围内的地都被挖去，直至地心深处，这不仅阻止了那些畸形生物的侵入，也给壁罩提供了这寒冷之下的温暖。</p><p>我没有说太多，只是让X再往前走走。</p><p>还没走一会，前面就急匆匆赶来一群人，他们都穿好了隔离服往壁罩外赶去。</p><p>我拉住一个人问出什么事了，他回答：“有一个人隔离服泄露，好像在外面出事了。”</p><p>X在一旁听到后不屑地说：“不如让他就在那里分解了，让我们都完蛋。”</p><p>那个人没理X，晃晃悠悠地跟上了前面的部队。</p><p>“我们要不要去帮忙？”我看着远处即将离开壁罩的那群人，对X说。</p><p>X没答应，继续往前走：“就让他分解吧，让那些怪胎复刻了他的基因后进来把我们全灭了吧，真是烦透了。”</p><p>我思索了一会，觉得他们能搞定，也和X一同走了。</p><p>我们沉默地走了一阵，周围的环境开始稍稍变亮，但仍然很黑，街道两旁开始零星有了炫彩的霓虹灯，将道路照的愈发清晰，也照亮了地面上的小水塘。</p><p>偶尔有一小片田出现，但并不多，只有区区几平米，而且看上去有很多病秧子，看着寒酸极了。那是分发到外围的最后一批种子的归属地。</p><p>正当我观察时，有几个身材瘦弱的小孩从路两边走出来，几双眼睛水汪汪地看着我们，他们面庞太瘦削了，几乎是营养不良。</p><p>“给我们点吃的吧。”其中一位女孩怯生生地看着我们。</p><p>我和X两人沉默一会，我伸手去拿袋子里的42号编辑体，而X更快，从他身上拿出自己珍藏的几个新型号编辑体，放在每个孩子手上，我也多拿了几个，分发给他们。</p><p>X没有停留，分完编辑体后就慢慢悠悠地走了，我见状，受了小孩们的谢意后也跟了上去。</p><p>“近些年的种子收成越来越差了，核心向外发的都是些病苗子，能种出什么就有鬼了。”X边走边说，“你那边怎么样？”</p><p>“不行，还是除了那112个编辑体，什么也带不进来。”我如实回答。</p><p>“真是见鬼了，这种日子什么时候是个头。”X显得烦躁，抬头盯着漆黑的天空。就像是被蒙上了黑色的膜，整个天空都黑洞洞的，太阳只是在上面移动的极其朦胧模糊的暗光斑，无法照亮地面。</p><p>我依旧没说什么，和X继续往深处走。</p><p>终于，周围的环境开始变得明亮。如果说刚才是夜晚的七八点钟，那么现在就是黄昏的四五点钟。</p><p>人群变得密集，不像之前黑暗中只有几栋房子，这里的建筑密密地排布着，昏黄色的灯光像沙尘一样笼罩在这里，给地面上的水渍染上了炫亮的橘色。</p><p>有人在路旁宿醉，有人在街道上跳舞，有人在大声争吵，有人在肆意狂笑，有人在垂头哭泣。灯光稠密得让我看不清他们每个人的长相，影影绰绰，只是几个离我很近却又很远的剪影。</p><p>“这边热闹多了。”X在我身边笑了出来，不知道是褒是贬，在我纠结之时，我们已经拐进了小巷。</p><p>小巷里不如街道上那般嘈杂，人很少，尽头是一家小酒馆，那是我们的目的地。</p><p>“欢迎光临。”我们在吧台落座，一位吧台里的年轻人对我们说。</p><p>“随便来点什么。”X回答，年轻人欣然答应。</p><p>“真不敢相信这场灾难是怎么发生的。”我自顾自地说。</p><p>我并不知道起因，这是场几百多年前发生的灾难，并延续至今。</p><p>“你想知道吗？”</p><p>突然那位吧台里的年轻人说着，他手上的雪克杯仍在不停的晃动，晶莹的水珠时不时滴落下来。</p><p>“什么？”我问到。</p><p>“那场灾难发生的过程。”</p><p>“你知道吗？”</p><p>“没人比我记得更清楚了。”年轻人笑了出来，“但也许还有其他和我一样的人。”</p><p>他说他叫K800，是一名灾难前人类建造的仿生人。</p><p>“我的记忆可以备份，我的身体可以更换，我可以记得我从出生到现在的所有事情，包括那个灾难。”K800笑着说。</p><p>“说来听听。”我起了兴趣，向他问起事情的缘由。</p><p>K800将两个装满如琥珀般剔透的液体的杯子放在我和X面前，然后不紧不慢的开始了他的讲述。</p><p>“那是一次突如其来的造访……”</p><p>那是一次突如其来的造访，天气是如此的平常，只不过是阴郁了一点，下了一点小雨。</p><p>人们出行，上班，可能为某些事情苦恼，为某些事情开心，一切都是如此的平常。</p><p>所以当雨下得越来越大，天上如乌云般的阴影久久不散时，没有人注意到异象，只不过是天气中有可能发生的“百年一遇”的奇观。</p><p>大雨下了整整七天，雾出奇得浓密，开始蔓延到世界，有些地方冒出了鲜绿的苔藓，水藻也逐渐爬上了池塘的水面，甚至是河流的、湖泊的、海洋的。许多怪像和那无数片迟迟不散的阴影终于引起了人们的注意。</p><p>人们又想要探寻出阴影为何物，但一无所获，似乎只是一片飘在半空的黑色迷雾，什么信号也检测不出来。</p><p>渐渐的，有人开始在浓密的雾中看见了巨大的黑影，它们在移动，世界上所有的地方都能看见。有人想要接触那些黑影，但走进雾中就发现它们如没有实体般地消失不见。没人知道他们真正是什么，如今大部分人和科学家相信这是高文明的外星人对地球的一次侵略。</p><p>又过了很久，天上的阴影和雾中的黑影都消失了，大雨逐渐停止，雾逐渐消散，一切都回归了正常，除了那些疯长的植物。</p><p>人们想，只是睡一觉的事情，醒来就一切都好了。而当他们再次睁开眼时，天空完全的变成黑色，太阳只是一个小小的光斑悬挂在那里，再也没有阳光，也再也没有降水。</p><p>我听完他的讲述沉默了许久，面前的玻璃杯早就空了，只有一枚化的不成样子的冰块躺在水里，光在水里透露出光怪陆离形态。</p><p>“那次造访地球接触了什么？那个黑影是什么？”我问。</p><p>“没人知道，可能吧。”说完，K800转过身去迎接另一个到来的顾客。</p><p>我晃动着玻璃杯里的冰块，X在我身边一句话也没说。</p><p>旁边的电视一直在播报着新闻，我看过去，是地球近况的概述。</p><p>“冰盖即将到达赤道，地球已经完全进入冰雪时代，我们还在期待黑暗纪元什么时候可以结束……”</p><p>X这时说：“该有个头了。”</p><p>小酒馆门上的铃铛响起，又有客人来了。那位客人扫视一圈，随后就将目光投放在X身上。</p><p>他走到X身边，声音无起伏的说：“博士，黑柱扩大了。”</p><p>X放下酒杯，长叹一口气，起身整理好衣服，然后看向我：“一起走吗？”</p><p>我愕然：“我可以进核心？”</p><p>“就当你是我的客人，走吧，说不定以后没机会了。”</p><p>我和X往外走，往四周看了看，那位客人早就消失不见了。</p><p>越过这片灯红酒绿，穿过分隔区域的罩墙，我们来到了一片明亮的地方。</p><p>不是七八点，也不是四五点，是两三点。</p><p>路两旁是几栋平房，隔着几片大草坪，远处还有几栋相似的房子，看着简约整洁，一点没有之前区域的高楼大厦那么繁华，但是让人感到舒心，因为在这里看蓝色的天空，仿佛有一种一切都没发生过的平静。</p><p>我从未来过这片区域，我感觉到这里景色的壮观，不由感叹：“白昼就是这种模样吗？”</p><p>“只是用钱堆出来的假白天。”X慢慢回答。</p><p>我们继续走着，走到一处车站，X招呼我上了唯一一辆停在站台旁的列车。列车缓缓开动，下午区域的景色快速往后奔跑，驶离我们的视线。</p><p>“你看过书吗？”X突然问。</p><p>我摇了摇头。</p><p>“也对，几百多年前的老玩意了。”</p><p>“你知道我们现在的情况像什么吗？”X又问。</p><p>我没有听懂，问他什么意思。</p><p>“这扰人的环境，这场灾难，你觉得是什么？”X补充说。</p><p>“外星人吧，大部分人都说是外星人的一次拜访带来的。”我回答。</p><p>“你觉得是一场侵略？”X又问，“来自外星人的？”</p><p>我点点头，算是同意。</p><p>X笑了出来：“你和那些人一样自大。”</p><p>我有点不明所以，问他那这些是什么。</p><p>他想了想，然后说：</p><p>“想象一下去野餐。”</p><p>“什么？”我愣住了，为什么是野餐。</p><p>“野餐啊，想象一下：一片森林，一片草地，一条小路，有个湖藏在森林里。年轻人开着一辆车，三三两两，从车上拿下帐篷，放着烤架，一张垫子或是小桌，装满食物的篮子，好多好多东西。然后他们燃起篝火，在烤架上做着烧烤，在湖旁嬉戏，吃着食物，唱着歌。然后过了几天，他们走了，这片野餐地上的生物，心惊胆战并恐惧着的动物、昆虫、湖里的鱼，从他们的栖息地出来，看到的是什么？满地的油，篝火的余烬，散落一地的包装袋、塑料纸，喝过的饮料瓶，食物的残骸，不小心掉落的烧烤签，扔掉的烟头，分泌的口水，水中飘落的布和那些从另一片土地上带来的枯叶、泥土……”</p><p>我惊讶，沉默的无语。</p><p>“是谁告诉你，人类就有资格和外星人交流？”X笑着说，“地球不过是他们来休闲的野餐地而已，那些绿色的怪东西不过是垃圾和蔓延的细菌，人类不过是那些恐惧的小鸟，瑟缩不出的地鼠，还有躲在水里的鱼罢了。”</p><p>“那么这黑色的天呢？”我颤抖地问。</p><p>“垃圾袋咯。”X喝了一口身旁的水，“为下一次野餐做清理准备。”</p><p>我恐惧得说不出话，喉咙都在不由自主的颤抖。看到我这幅模样，X大笑了起来：“瞧你那胆小的样！我只不过是想象，谁也不知道真相是什么。”</p><p>车很快就到了站。X领我下车，这是我第一次也可能是唯一一次来核心。</p><p>这边的亮度像是清晨的光辉，一切都是那么平和。四周是一眼望不到头的农田，静静地生长，仿佛天地之间只留下了它们一般，没有畸形的植物，没有疯狂的人群，没有街道上的腥臭味，只有静静生长的庄稼。</p><p>在光亮的映射下，核心部分的那个黑柱显得格外显眼。</p><p>我跟在X后面走着，又是一阵沉默在我们之间弥漫。</p><p>我们很快就到了黑柱面前，就在农田的尽头，周围没有一个人。</p><p>“它原来很小的，”X说，“就一根手指那般粗细。现在变成了一人抱的大小了。”</p><p>“想看看吗？”X回头问我，“没关系的，它现在扩张得很慢。”</p><p>我迟疑地走到它跟前，惊讶发现这黑柱的表面就和流动的水一样。</p><p>“你知道光在水中的折射吧。”X在我身边问，他也注视着这黑柱。</p><p>“我知道。”</p><p>“那你知道费马原理吗？”</p><p>我摇了摇头。</p><p>X解释道：“就是一束光实际选择的路线永远是最快的一条。就拿光从空气到水中的这段折射来看，光选择了时间最短的路线，并不是因为光接触了水面而发生了折射，而是因为光为了最快到达目的地而选择了折射。”</p><p>“当然，也许还可以用折射与电磁场的边界条件解释，但我想这个解释更符合我的想法。”X补充道。</p><p>“那光为什么这么能选中那一条？”我问。</p><p>“概率云，选中了最短的路径坍缩，也就是最大概率的那一条。”X回答。</p><p>“你不觉得这种现象很神奇吗？”X反问我，“就像光从出发的时候就知道自己的目的地是哪里。”</p><p>“所以你想说，这种黑水也有这个现象？”我对X突如其来的问题有了猜想。</p><p>“不清楚，它只能透过另一边的一部分不可见光，吸收这边的所有的光，我们并不能完全知道另一边是什么。”</p><p>“那这种黑水能接触吗？”我继续问。</p><p>X没有说话，捡起庄稼下的一块石头，走到黑柱的另一面，高喊一声：“我扔给你咯！”</p><p>我屏息看着面前的黑柱，等待了数十秒，然而除了它表面上的波纹起伏，我这里什么也没看到。</p><p>“怎么样？”X绕回到我面前。</p><p>“没有。”</p><p>他耸了耸肩，表示结果不言而喻，然后重新走到那片庄稼下，捡了一块石头，说：“他在这。”</p><p>“怎么可能？说不定只是长得一样的石头。”我愕然。</p><p>见我不信，X扔掉那块石头，然后问我：“你有没有什么只有你有，其他谁都没有的东西？”</p><p>闻言，我想起了我脖子上挂着的一块芯片，那是我有记忆时起就一直保存在我身上的，我正犹豫，就听见X的声音传来：“别藏了，它会回来的。”</p><p>我扯下那块芯片，递给X，只留下那根挂绳，他掂了掂：“看好了。”然后手臂向后摆，猛得向前一扔，那块芯片完全没入黑柱里了。</p><p>“看看吧。”X说，“看看你的脖子上。”</p><p>我扯开身前的衣服，那芯片赫然挂在我的脖子上，但我什么感觉都没有，仿佛它一直存在一样。我就这样看着那块芯片，它时不时摇晃两下，我久久不语。</p><p>“再来一次？”X说。</p><p>我不像第一次那样犹豫，将芯片递给了他，他又非常使劲地用右手将那块芯片扔了进去，我低头看向我身前，然而那里什么也没有，连几秒前那根挂芯片的绳子也不见了，我一愣神。</p><p>“在我这。”X说。</p><p>我看着他紧握的左手伸到我面前，然后慢慢张开，是那块芯片，和一根不同于之前的，完全崭新的一根挂绳。</p><p>“什么情况？”我拿回芯片和挂绳，这已经是我来核心以来又一次的震惊了。</p><p>“概率，它在刷新自己的概率。”X长呼一口气。</p><p>“什么概……”</p><p>“我想你应该走了，你应该记得车站怎么走吧，那我就不送了。”</p><p>“所以我们在水里还是在水外？”我突然想起，但是X久久不回答。</p><p>正当我想问清楚这到底是怎么回事时，X打断了我，并对我下达了逐客令。没等我继续问，他就继续绕过黑柱走向壁罩另一边去了。</p><p>我也绕过去，看着X遥远的背影，我大喊：“什么时候结束？”</p><p>“放心，我们会再见的，在水的另一边。”X的声音远远传来，不再回答我的问题，他的背影越来越小，直到他消失在了我的视线里。</p><p>我没有了陪伴之人，打算回头，发现黑柱又扩大了一些，便慌了神，向车站跑去。</p><p>还是那唯一一辆车，这次我一个人登上车，列车开的不紧不慢，它可不管有什么黑柱。</p><p>我向窗外的黑柱看去，它已经变得很大了，而且感觉扩张得比之前在它面前时快多了，庞大的黑柱不停扩张着，之前的那些田地多数已经被它掩埋，它们会在哪里出现？水外吗？那个谁也不知道的黑柱里？</p><p>等我下车时，下午区的住户早已出来看是发生了什么事情。</p><p>“什么情况？黑柱怎么把能源区给遮住了？天都要变黑了，我才刚交的钱！”</p><p>那些住在光明区的人们纷纷走出房子，在道路上不满和愕然地看着那个大到即将填满视线的黑柱。</p><p>我不断往黑暗区的方向跑去，身旁的人们只是伫立不动，平静地议论着这个奇异的现象。</p><p>跑啊。</p><p>汗水开始在皮肤上分泌，肺部也开始急促撺掇着空气，虽然不知道黑水之后有什么，但直觉告诉我，跑啊。我看像周围的人，心里怨说道，怎么还不跑！</p><p>很快，后面传来一阵哭喊：“我的孩子，我的孩子被黑柱吞噬了！”</p><p>一句话像是点燃了沉默平静的氛围，人们开始发了疯似的向着我同方向跑去，人群很快就将我挤离预定的方向，将我挤到队伍的后方去了。</p><p>我不敢回头看向黑柱，仿佛一回头就是死亡，寂静和喧闹就像是在我这条水平线上相遇，喘息声愈发清晰。</p><p>黑暗区的入口就在眼前，兀然，有一人站在黑暗区和光明区的分界线上一动不动，面向着我，人力的挤压似乎对他没有任何影响，他睁着波澜不惊的眼，直直地盯着我。</p><p>k800。</p><p>无由来的，他眼睛的注视让我没有了继续逃跑的意思，黑柱总归要扩散到四处各地的，我又如何能逃过呢？</p><p>我直定定地在k800面前停下来，人群的喧哗就像是绕过了我们俩，自顾自地向黑暗奔腾而去。</p><p>k800将手探向他的后颈，再伸出来时，一块和我身上一模一样的芯片赫然在他手心上躺着。</p><p>他的手缓慢地探向我的侧脸，就像身后从来没有黑柱的威胁，指尖划过耳下碎发，抚向我的后颈，按上我颈椎上凸起的骨头。</p><p>“我们希望你记得。”</p><p>你们？</p><p>我？</p><p>我要……</p><p>记得……什么？</p><p>眼皮突然被撑开，白光刺了进来，我不受控制的收缩着瞳孔。</p><p>“1号第一次行动记录开始，反应正常。”</p><p>“他脑袋里那块芯片哪来的？”</p><p>“好像是原型机的，不知道谁放上去的，已经拿下来换了一块新的上去了。”</p><p>“原型机不是已经有芯片吗？”</p><p>“不知道怎么回事，里面数据也读取不出来。”</p><p>“给概念型当备用芯片吧。”</p><p>“好的。”</p><p>“这个天，快要下雨了吗？”</p><p>当我完全睁开眼睛，撑着身子从地板上坐起来时，发现自己在一个空荡荡的房间里，三面是洁白的墙壁，一面是整墙的落地窗。</p><p>天空，窗外雾蒙蒙的，仿佛看见的只有天空，大雾和乌云遮住了太阳，浓厚的像一团阴影。</p><p>我坐在落地窗前，沉默地盯着窗外，不知过了多久，雾蒙蒙的天空中开始淋下小水珠，垂缀附着在玻璃外表面。我抬手去够玻璃窗，就在我摸上冰凉的玻璃时，脖子上同样感受到冰凉。</p><p>我低头看去，是一块挂在项链绳上的芯片。</p><p>我回头看向那个为我带上芯片的人。</p><p>“很高兴再次看见你，我说过我们会再见的。”</p><p>我看向他的胸章，k800概念型-X。</p><p>“欢迎来到水外，欢迎来到水里。”</p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -小说 -短篇 -原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello world</title>
      <link href="/2022/04/30/hello%20world/"/>
      <url>/2022/04/30/hello%20world/</url>
      
        <content type="html"><![CDATA[<h2 id="Hello-World">Hello World</h2><p>这是我的第一篇文章</p><p>博客相关命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo cl <span class="comment"># 清除网页静态文件</span></span><br><span class="line">hexo g <span class="comment"># 生成网页静态文件</span></span><br><span class="line">hexo d <span class="comment"># 上传博客</span></span><br><span class="line">hexo s <span class="comment"># 本地预览</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npx hexo clean    <span class="comment"># 清除网页静态文件</span></span><br><span class="line">npx hexo generate <span class="comment"># 生成网页静态文件</span></span><br><span class="line">npx hexo deploy   <span class="comment"># 上传博客</span></span><br><span class="line">npx hexo server   <span class="comment"># 本地预览</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
